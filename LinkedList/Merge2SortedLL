//TC : O(n1+n2)
//SC : O(n1+n2)
public void MergeSortedLinkedList(ListNode list1,ListNode list2){
  ListNode curr = new ListNode();
  ListNode res = curr;
  while(list1!=null && list2!=null){
    if(list1.val>list2.val){
      curr.next=list2;
      list2=list2.next;
      curr=curr.next;
    }
    else{
      curr.next=list1;
      list1=list1.next;
      curr=curr.next;
    }
  }
  curr.next = (list1!=null) ? list1 : list2;
  return res.next;
}


//TC : O(n1+n2)
//SC : O(1)
public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        
        if(list1==null) return list2;
        if(list2==null) return list1;
        if(list1.val > list2.val){
           ListNode temp = list2;
            list2=list1;
            list1= temp;
        }
        ListNode res=list1;
        while(list1!=null && list2!=null){
            ListNode temp = null;
            while(list1!=null&&list1.val<=list2.val){
                 temp=list1;
                list1=list1.next;
            }
            temp.next=list2;

            ListNode tmp = list1;
            list1=list2;
            list2=tmp;

        }
        return res;
    }
